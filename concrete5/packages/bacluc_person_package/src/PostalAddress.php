<?php
/**
 * Created by PhpStorm.
 * User: lucius
 * Date: 21.12.15
 * Time: 14:53
 */

namespace Concrete\Package\BaclucPersonPackage\Src;
use Concrete\Package\BaclucPersonPackage\Src\EntityViews\PostalAddressFormView;
use Concrete\Package\BasicTablePackage\Src\EntityGetterSetter;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Concrete\Package\BasicTablePackage\Src\FieldTypes\DateField;
use Concrete\Package\BasicTablePackage\Src\BaseEntity;

/*because of the hack with @DiscriminatorEntry Annotation, all Doctrine Annotations need to be
properly imported*/
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Mapping\InheritanceType;
use Doctrine\ORM\Mapping\DiscriminatorColumn;
use Concrete\Package\BasicTablePackage\Src\DiscriminatorEntry\DiscriminatorEntry;
use Doctrine\ORM\Mapping\Table;


/**
 * Class Address
 * package  Concrete\Package\BaclucPersonPackage\Src
 * @Entity
 * @DiscriminatorEntry( value = "Concrete\Package\BaclucPersonPackage\Src\PostalAddress" )
 * @Table(name="bacluc_postal_address")
 */
class PostalAddress extends Address
{
    use EntityGetterSetter;
    //dontchange
    public static $staticEntityfilterfunction; //that you have a filter that is only for this entity
    /**
     * @var int
     * @Id @Column(type="integer")
     * @GEneratedValue(strategy="AUTO")
     */
    protected $id;


    /**
     * @Column(type="string")
     */
    protected $address;

    /**
     * @Column(type="string")
     */
    protected $additionalinfo;

    /**
     * @Column(type="string")
     */
    protected $floor;

    /**
     * @Column(type="string")
     */
    protected $postalcode;

    /**
     * @Column(type="string")
     */
    protected $city;

    /**
     * @Column(type="string")
     */
    protected $state;


    /**
     * @Column(type="string")
     */
    protected $country;





    public function __construct(){
        parent::__construct();
        if($this->People == null){
            $this->People = new ArrayCollection();
        }



    }

    public function setDefaultFormViews()
    {
        $this->defaultFormView = new PostalAddressFormView($this);
    }

    public function setDefaultFieldTypes()
    {
        parent::setDefaultFieldTypes(); // TODO: Change the autogenerated stub
    }

    public static function getDefaultGetDisplayStringFunction(){
        $function = function(PostalAddress $item){

            $returnString ="";
            if(strlen($item->address)>0){
                $returnString.=$item->address." ";
            }
            if(strlen($item->additionalinfo!=null)>0){
                $returnString.=$item->additionalinfo." ";
            }
            if(strlen($item->floor!=null)){
                $returnString.=$item->floor." ";
            }
            if(strlen($item->postalcode!=null)){
                $returnString.=$item->postalcode." ";
            }
            if(strlen($item->city!=null)){
                $returnString.=$item->city." ";
            }
            return $returnString;
        };
        return $function;
    }





}